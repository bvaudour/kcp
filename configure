#!/usr/bin/env bash

VERSION=
CONFIGDIR=/etc/kcp
CONFIGFILE=kcp.conf
LOCALEDIR=/usr/share/locale
DOMAIN=kcp
ORGANIZATION=KaOS-Community-Packages
USER=
PASSWORD=
HOST=github.com
TOKEN=

_help() {
	echo "Usage: $0 [options]"
	echo "Options:"
	echo -e "\t-h, --help\tPrint this help"
	echo -e "\t--version\tVersion of the application"
	echo -e "\t--config-dir\tFinal configuration directory [/etc/kcp]"
	echo -e "\t--config-file\tName of the configuration file [kcp.conf]"
	echo -e "\t--locale-dir\tFinal locale directory [/usr/share/locale]"
	echo -e "\t--locale-domain\tDomain name of the locales [kcp]"
	echo -e "\t--organization\tGit server organization [KaOS-Community-Packages]"
	echo -e "\t--host\tName of git server domain [github.com]"
	echo -e "\t--user\tUser to use for the git server API requests"
	echo -e "\t--password\tPassword to use for the git server API requests"
	echo -e "\t--token\tToken to use for the git server API requests"
}

_parseArgs() {
	while (( $# > 0 )); do
		local flag=$1
		local arg=$2
		shift
		shift
		case $flag in
		-h|--help) _help; exit;;
		--version) VERSION=$arg;;
		--config-dir) CONFIGDIR=$arg;;
		--config-file) CONFIGFILE=$arg;;
		--locale-dir) LOCALEDIR=$arg;;
		--locale-domain) DOMAIN=$arg;;
		--host) HOST=$arg;;
		--organization) ORGANIZATION=$arg;;
		--user) USER=$arg;;
		--password) PASSWORD=$arg;;
		--token) TOKEN=$arg;;
		*) echo "Invalid flag: '${flag}'. Type $0 -h for help."; exit 1;;
		esac
	done
}

_checkVersion () {
	if [[ -z ${VERSION} ]]; then
		if [[ -e .git ]]; then
			VERSION=$(git rev-parse HEAD)
		else
			VERSION='<unknown>'
		fi
	fi
}

_makeMakefile() {
	cp -f Makefile.in Makefile
	sed -i "s|%version%|${VERSION}|" Makefile
	sed -i "s|%configdir%|${CONFIGDIR}|" Makefile
	sed -i "s|%configfile%|${CONFIGFILE}|" Makefile
	sed -i "s|%localedir%|${LOCALEDIR}|" Makefile
	sed -i "s|%domain%|${DOMAIN}|" Makefile
	sed -i "s|%host%|${HOST}|" Makefile
	sed -i "s|%organization%|${ORGANIZATION}|" Makefile
	sed -i "s|%user%|${USER}|" Makefile
	sed -i "s|%password%|${PASSWORD}|" Makefile
	sed -i "s|%token%|${token}|" Makefile
}

_parseArgs $@
_checkVersion
_makeMakefile
